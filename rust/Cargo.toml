[workspace]
resolver = "2"
members = [
    "crates/composer-config",
    "crates/composer-core",
    "crates/composer-serialization",
    "crates/composer-ai",
    "crates/composer-ffi",
    "crates/composer-wasm",
]

[workspace.package]
version = "0.1.1"
edition = "2021"
authors = ["Composer Contributors"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/cjgdev/composer"
description = "High-performance music theory and composition library"
keywords = ["music", "theory", "chord", "ai", "composition"]
categories = ["multimedia::audio", "algorithms", "science"]

[workspace.dependencies]
# Core dependencies
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
thiserror = "1.0"
anyhow = "1.0"

# Performance
rayon = "1.7"
ahash = { version = "0.8", default-features = false, features = ["std"] }
smallvec = { version = "1.13", features = ["serde"] }
tinyvec = "1.6"

# Math and algorithms
num-traits = "0.2"
num-derive = "0.4"
approx = "0.5"

# Async and concurrency
tokio = { version = "1.0", features = ["full"] }
dashmap = "5.5"
parking_lot = "0.12"

# Testing
proptest = "1.2"
criterion = { version = "0.5", features = ["html_reports"] }

# WASM specific
wasm-bindgen = "0.2"
web-sys = "0.3"
js-sys = "0.3"
console_error_panic_hook = "0.1"
serde-wasm-bindgen = "0.6"
wasm-bindgen-test = "0.3"
getrandom = { version = "0.2", features = ["js"] }

# Python specific  
pyo3 = { version = "0.25.1", features = ["extension-module"] }
pyo3-build-config = "0.25.1"

# Binary serialization
rmp-serde = "1.1"
bincode = "1.3"
byteorder = "1.5"
hex = "0.4"

# Logging
log = "0.4"
env_logger = "0.10"

# Utilities
once_cell = "1.19"
regex = "1.10"

[workspace.lints.rust]
unsafe_code = "forbid"
missing_docs = "warn"
unused_imports = "warn"
unused_variables = "warn"
dead_code = "warn"

[workspace.lints.clippy]
# Enforce a high standard of code quality across the entire workspace
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
# Performance lints critical for audio/music processing
clone_on_ref_ptr = "warn"
large_stack_arrays = "warn"
needless_collect = "warn"
redundant_clone = "warn"
string_to_string = "warn"
unnecessary_to_owned = "warn"
# Safety lints for production code
panic = "deny"
unwrap_used = "deny"
expect_used = "deny"
indexing_slicing = "deny"

[profile.release]
lto = true
codegen-units = 1
panic = "abort"
strip = true

[profile.bench]
debug = true