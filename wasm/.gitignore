# JavaScript/TypeScript/WebAssembly .gitignore
# ============================================

# Dependencies
# ------------
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Runtime data
# ------------
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
# ----------------------------------------------
coverage/
*.lcov

# nyc test coverage
# -----------------
.nyc_output

# Grunt intermediate storage
# --------------------------
.grunt

# Bower dependency directory
# --------------------------
bower_components

# node-waf configuration
# ----------------------
.lock-wscript

# Compiled binary addons
# ----------------------
build/Release

# Dependency directories
# ----------------------
node_modules/
jspm_packages/

# Snowpack dependency directory
# -----------------------------
web_modules/

# TypeScript cache
# ----------------
*.tsbuildinfo

# Optional npm cache directory
# ----------------------------
.npm

# Optional eslint cache
# ---------------------
.eslintcache

# Optional stylelint cache
# ------------------------
.stylelintcache

# Microbundle cache
# -----------------
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
# ---------------------
.node_repl_history

# Output of 'npm pack'
# --------------------
*.tgz

# Yarn Integrity file
# -------------------
.yarn-integrity

# dotenv environment variable files
# ---------------------------------
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache
# --------------------
.cache
.parcel-cache

# Next.js build output
# --------------------
.next
out

# Nuxt.js build / generate output
# -------------------------------
.nuxt
dist

# Gatsby files
# ------------
.cache/
public

# Vuepress build output
# ---------------------
.vuepress/dist

# Serverless directories
# ----------------------
.serverless/

# FuseBox cache
# -------------
.fusebox/

# DynamoDB Local files
# --------------------
.dynamodb/

# TernJS port file
# ----------------
.tern-port

# Stores VSCode versions used for testing VSCode extensions
# --------------------------------------------------------
.vscode-test

# yarn v2
# -------
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

# WebAssembly specific
# --------------------
*.wasm
pkg/
wasm-pack.log

# Generated JavaScript from wasm-pack
# -----------------------------------
*_bg.js
*_bg.wasm
*_bg.wasm.d.ts
*.d.ts
!src/**/*.d.ts  # Keep TypeScript declaration files in source

# Rust target directory (if building WASM from Rust here)
# -------------------------------------------------------
target/
Cargo.lock

# Build outputs
# -------------
dist/
build/
lib/

# TypeScript build outputs
# ------------------------
*.js.map
*.d.ts.map

# Rollup cache
# ------------
.rollup.cache/

# Webpack cache
# -------------
.webpack/

# Vite cache
# ----------
.vite/

# SWC cache
# ---------
.swc/

# Turbo cache
# -----------
.turbo/

# Storybook build outputs
# -----------------------
storybook-static

# Temporary folders
# -----------------
tmp/
temp/

# Editor directories and files
# ----------------------------
.vscode/
!.vscode/extensions.json
.idea/
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# OS generated files
# ------------------
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Log files
# ---------
*.log
logs/

# Lock files (keep package-lock.json but ignore others)
# -----------------------------------------------------
yarn.lock
pnpm-lock.yaml
# Keep package-lock.json for npm projects

# Test artifacts
# --------------
test-results/
coverage/
.nyc_output/

# Benchmark results
# -----------------
benchmark-results/
.benchmarks/

# Documentation build
# -------------------
docs/build/
docs/.docusaurus/

# Local environment
# -----------------
.local
.cache

# JetBrains IDEs
# --------------
.idea/
*.iws
*.iml
*.ipr

# Vim
# ---
*.swp
*.swo
*~

# Emacs
# -----
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Sublime Text
# ------------
*.sublime-project
*.sublime-workspace

# wasm-pack generated files
# -------------------------
composer_wasm.js
composer_wasm_bg.js
composer_wasm_bg.wasm
composer_wasm.d.ts
composer_wasm_bg.wasm.d.ts
composer_wasm_bundler.js
composer_wasm_bundler_bg.js
composer_wasm_bundler_bg.wasm
composer_wasm_bundler.d.ts
composer_wasm_bundler_bg.wasm.d.ts
composer_wasm_web.js
composer_wasm_web_bg.wasm
composer_wasm_web.d.ts
composer_wasm_web_bg.wasm.d.ts

# Generated package.json from wasm-pack
# -------------------------------------
# package.json  # Uncomment if you want to ignore generated package.json

# Backup files
# ------------
*.bak
*.backup
*.orig

# Archive files
# -------------
*.tar.gz
*.zip
*.7z
*.rar

# Performance and profiling
# -------------------------
*.heapprofile
*.cpuprofile
.clinic/

# ESLint and Prettier cache
# -------------------------
.eslintcache
.prettiercache

# Biome cache (if using Biome formatter/linter)
# ---------------------------------------------
.biome-cache/